---
title: "{{detection.name}}"
excerpt: "{% for attack in detection.mitre_attacks -%}
{%- if attack.technique_id -%}
{{ attack.technique }}
{%- endif -%}
{% if not loop.last -%}, {% endif -%}
{% endfor %}"
categories:
  - {{detection.kind|capitalize}}
last_modified_at: {{detection.date}}
toc: true
toc_label: ""
tags:
{%- for attack in detection.mitre_attacks %}
  - {{ attack.technique }}
  {%- for attack_tactic in attack.tactic %}
  - {{ attack_tactic }}
  {%- endfor -%}
{%- endfor -%}
{%- for product in detection.tags.product %}
  - {{ product }}
{%- endfor -%}
{%- for cve in detection.cve %}
  - {{ cve.id }}
{%- endfor -%}
{%- for datamodel in detection.datamodel %}
  - {{ datamodel }}
{%- endfor %}
redirect_from: {{detection.kind}}/{{ detection.name | lower | replace (" ", "_") }}/
---

{% if detection.experimental is sameas true -%}
### :warning: THIS IS A EXPERIMENTAL DETECTION
This detection has been marked experimental by the Splunk Threat Research team. This means we have not been able to test, simulate, or build datasets for this detection. Use at your own risk. This analytic is **NOT** supported.
{% elif detection.deprecated is sameas true %}
### :no_entry: THIS IS A DEPRECATED DETECTION
This detection has been marked deprecated by the Splunk Threat Research team. This means that it will no longer be maintained or supported. 
{% endif %}

[Try in Splunk Security Cloud](https://www.splunk.com/en_us/cyber-security.html){: .btn .btn--success}

#### Description

{{ detection.description }}

- **Type**: [{{ detection.type }}](https://github.com/splunk/security_content/wiki/Detection-Analytic-Types)
- **Product**: {{ detection.tags.product|join(', ') }}
{% if detection.datamodel -%}- **Datamodel**: {% for datamodel in detection.datamodel %}[{{ datamodel }}](https://docs.splunk.com/Documentation/CIM/latest/User/{{ datamodel|replace("_", "")}}){% if not loop.last %}, {% endif %}{%- endfor %}{%- endif %}
- **Last Updated**: {{ detection.date }}
- **Author**: {{detection.author}}
- **ID**: {{ detection.id }}

### Annotations
<details>
  <summary>ATT&CK</summary>

<div markdown="1">
{% if detection.mitre_attacks %}
#### [ATT&CK](https://attack.mitre.org/)

| ID          | Technique   | Tactic         |
| ----------- | ----------- |--------------- |
{%- for attack in detection.mitre_attacks %}
{% if attack.technique_id -%}
{% set sub_technique = attack.technique_id.split('.') %}{% if sub_technique | length > 1 -%}
| [{{ attack.technique_id }}](https://attack.mitre.org/techniques/{{sub_technique[0]}}/{{sub_technique[1]}}/) | {{ attack.technique }} | {{ attack.tactic|join(', ') }} |
{% else -%}
| [{{ attack.technique_id }}](https://attack.mitre.org/techniques/{{attack.technique_id}}/) | {{ attack.technique }} | {{ attack.tactic|join(', ') }} |
{% endif -%}
{% endif -%}
{% endfor %}
{% endif -%}
</div>
</details>


<details>
  <summary>Kill Chain Phase</summary>

<div markdown="1">

{% for phase in detection.tags.kill_chain_phases -%}
* {{ phase }}
{% endfor %}

</div>
</details>


<details>
  <summary>NIST</summary>

<div markdown="1">

{% if detection.tags.nist -%}
{% for nist in detection.tags.nist -%}
* {{ nist }}
{% endfor %}
{% endif %}

</div>
</details>

<details>
  <summary>CIS20</summary>

<div markdown="1">

{% if detection.tags.cis20 -%}
{% for cis in detection.tags.cis20 -%}
* {{ cis }}
{% endfor %}
{% endif %}

</div>
</details>

<details>
  <summary>CVE</summary>

<div markdown="1">
{% if detection.cve %}
| ID          | Summary | [CVSS](https://nvd.nist.gov/vuln-metrics/cvss) |
| ----------- | ----------- | -------------- |
{% for cve in detection.cve -%}
| [{{ cve.id }}](https://nvd.nist.gov/vuln/detail/{{cve.id}}) | {{ cve.summary }} | {{ cve.cvss }} |
{% endfor %}
{% endif %}

</div>
</details>


#### Search

```
{{ detection.search|replace("|", "\n|")|safe }}
```

{% if detection.macros -%}
#### Macros
The SPL above uses the following Macros:
{% for macro in detection.macros -%}
{% if not '_filter' in macro.name -%}
* [{{ macro.name }}](https://github.com/splunk/security_content/blob/develop/macros/{{macro.name}}.yml)
{% endif -%}
{% endfor %}
{% endif -%}

> :information_source:
> **{{detection.name | lower | replace(" ", "_") }}_filter** is a empty macro by default. It allows the user to filter out any results (false positives) without editing the SPL.

{% if detection.lookups -%}
#### Lookups
The SPL above uses the following Lookups:

{% for lookup in detection.lookups -%}
* [{{lookup.name}}](https://github.com/splunk/security_content/blob/develop/lookups/{{lookup.name}}.yml) with [data](https://github.com/splunk/security_content/tree/develop/lookups/{{lookup.name}}.csv)
{% endfor %}
{% endif -%}

{% if detection.splunk_app_enrichment %}
#### Supported Add-on (TA)
List of [Splunk Add-on's](https://docs.splunk.com/Documentation/AddOns/released/Overview/AboutSplunkadd-ons) tested to work with the analytic.
{% for splunk_app in detection.splunk_app_enrichment %}
* [{{ splunk_app.name }}]({{splunk_app.url}})
{%-endfor %}
{% endif %}

#### Required fields
List of fields required to use this analytic.
{% for field in detection.tags.required_fields -%}
* {{ field }}
{% endfor %}


#### How To Implement
{{ detection.how_to_implement}}
#### Known False Positives
{{ detection.known_false_positives}}

#### Associated Analytic Story
{% for story in detection.tags.analytic_story -%}
* [{{ story }}](/stories/{{story|lower|replace(" ", "_")}})
{% endfor %}


{% if detection.tags.observable %}
#### RBA

| Risk Score  | Impact      | Confidence   | Message      |
| ----------- | ----------- |--------------|--------------|
| {{(detection.tags.impact * detection.tags.confidence)/100}} | {{ detection.tags.impact }} | {{ detection.tags.confidence }} | {{detection.tags.message}} |
{% endif %}

> :information_source:
> The Risk Score is calculated by the following formula: Risk Score = (Impact * Confidence/100). Initial Confidence and Impact is set by the analytic author.


#### Reference
{% if detection.references %}
{% for reference in detection.references -%}
* [{{ reference }}]({{ reference }})
{% endfor %}
{% endif %}

#### Test Dataset
Replay any dataset to Splunk Enterprise by using our [`replay.py`](https://github.com/splunk/attack_data#using-replaypy) tool or the [UI](https://github.com/splunk/attack_data#using-ui).
Alternatively you can replay a dataset into a [Splunk Attack Range](https://github.com/splunk/attack_range#replay-dumps-into-attack-range-splunk-server)

{% for dataset in detection.tags.dataset -%}
* [{{dataset}}]({{ dataset }})
{% endfor %}


[*source*](https://github.com/splunk/security_content/tree/develop/detections/{{detection.kind}}/{{ detection.name | lower | replace (" ", "_") }}.yml) \| *version*: **{{detection.version}}**
